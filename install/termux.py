#=======================================================================================
#CYBER NAME BLACK-KILLER
#GITHUB: https://github.com/ShuBhamg0sain
#instagram:https://instagram.com/shubham_g0sain
#=======================================================================================

#=======================================================================================
import marshal, base64
exec(base64.b64decode(""))
#=======================================================================================
